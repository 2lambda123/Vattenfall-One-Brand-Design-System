// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.vattenfall-btn {
  display: inline-block;
  font-weight: $btn-font-weight;
  color: $body-color;
  text-align: center;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);
  min-width: 180px;



  //   box-sizing: border-box;
  // position: relative;
  // display: inline-block;
  // min-width: 190px;
  // min-height: 45px;
  // padding: 9px 44px;
  // font-family: "Vattenfall Hall", sans-serif;
  // font-size: 16px;
  // font-weight: 500;
  // line-height: 26px;
  // text-decoration: none;
  // text-align: center;
  // color: #000000;
  // border-width: 2px;
  // border-style: solid;
  // border-color: transparent;
  // background-color: #ffda00;
  // border-radius: 23px;
  // transition-property: background-color, border-color, color;
  // transition-duration: 300ms;
  // -webkit-tap-highlight-color: transparent;
  // -webkit-font-smoothing: antialiased;
  // cursor: pointer;


  &:before {
    content: '\2192';
    position: absolute;
    transform: translate(-45px, -2px);
    font-weight: normal;
    font-size: 21px;
    opacity: 0;
    transition-property: opacity, transform;
    transition-duration: 300ms;
    transition-delay: 0ms;
  }

  &:hover:before {
    transition-delay: 150ms;
    transform: translate(-30px, -2px);
    opacity: 1;
  }

  // Share hover and focus styles
  @include hover-focus {
    color: $body-color;
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  // Opinionated: add "hand" cursor to non-disabled .vattenfall-btn elements
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    @include box-shadow($btn-active-box-shadow);

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.vattenfall-btn.disabled,
fieldset:disabled a.vattenfall-btn {
  pointer-events: none;
}


//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .vattenfall-btn--#{$color} {
    @include button-variant($value, $value);
  }
}

@each $color, $value in $theme-colors {
  .vattenfall-btn--outline-#{$color} {
    @include button-outline-variant($value);
  }
}


//
// Link buttons
//

// Make a button look and behave like a link
.vattenfall-btn--link {
  font-weight: $font-weight-normal;
  color: $link-color;
  background-color: transparent;

  @include hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
    border-color: transparent;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
    border-color: transparent;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}


//
// Button Sizes
//

.vattenfall-btn--lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, ($font-size-base * 1.125), $btn-line-height-lg, $btn-border-radius-lg);
  min-width: 240px;
}

.vattenfall-btn--sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
}


//
// Block button
//

.vattenfall-btn--block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .vattenfall-btn--block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.vattenfall-btn--block {
    width: 100%;
  }
}