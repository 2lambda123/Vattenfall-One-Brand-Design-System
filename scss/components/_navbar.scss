// Contents
//
// Navbar
// Navbar brand
// Navbar nav
// Navbar text
// Navbar divider
// Responsive navbar
// Navbar position
// Navbar themes


// Navbar
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
  position: relative;
  display: flex;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: center;
  justify-content: space-between; // space out brand from logo
  padding: $navbar-padding-y $navbar-padding-x;

  // Because flex properties aren't inherited, we need to redeclare these first
  // few properties so that content nested within behave properly.
  > .vf-container,
  > .vf-container-fluid {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
  }
}


// Navbar brand
//
// Used for brand, project, or site names.

.navbar-brand {
  display: inline-block;
  flex: 0 0 100%; 
  text-align: center;

  padding-top: $navbar-brand-padding-y;
  padding-bottom: $navbar-brand-padding-y;
  margin-right: 0;
  line-height: inherit;
  white-space: nowrap;

  @include hover-focus {
    text-decoration: none;
  }
}


// Navbar nav
//
// Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

.navbar-nav {
  display: flex;
  width: 100%;
  flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
  justify-content: space-between; // space out brand from logo

  font-size: 20px;
  font-weight: 500;

  .nav-link {
    padding-right: 0;
    padding-left: 0;
  }

  .dropdown-menu {
    position: static;
    float: none;
  }
}

.navbar-nav--subnav {
  background: $vattenfall-blue-grey;

  a.nav-link {
    color: white;
  }
}


// Navbar text
//
//

.navbar-text {
  display: inline-block;
  padding-top: $nav-link-padding-y;
  padding-bottom: $nav-link-padding-y;
}


// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
.navbar-collapse {
  flex-basis: 100%;
  flex-grow: 1;
  // For always expanded or extra full navbars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;
}

// Button for toggling the navbar when in its collapsed state
.navbar-toggler {
  padding: $navbar-toggler-padding-y $navbar-toggler-padding-x;
  font-size: $navbar-toggler-font-size;
  line-height: 1;
  background-color: transparent; // remove default button style
  border: $border-width solid transparent; // remove default button style
  @include border-radius($navbar-toggler-border-radius);

  @include hover-focus {
    text-decoration: none;
  }

  // Opinionated: add "hand" cursor to non-disabled .navbar-toggler elements
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }
}

// Keep as a separate element so folks can easily override it with another icon
// or image file as needed.
.navbar-toggler-icon {
  display: inline-block;
  width: 1.5em;
  height: 1.5em;
  vertical-align: middle;
  content: "";
  background: no-repeat center center;
  background-size: 100% 100%;
}

// Generate series of `.navbar-expand-*` responsive classes for configuring
// where your navbar collapses.
.navbar-expand {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        > .vf-container,
        > .vf-container-fluid {
          padding-right: 0;
          padding-left: 0;
        }
      }

      @include media-breakpoint-up($next) {
        flex-flow: row wrap;
        justify-content: flex-start;

        .navbar-nav {
          flex-direction: row;

          .dropdown-menu {
            position: absolute;
          }

          .nav-link {
            padding-right: $navbar-nav-link-padding-x;
            padding-left: $navbar-nav-link-padding-x;
          }
        }

        // For nesting vf-containers, have to redeclare for alignment purposes
        > .vf-container,
        > .vf-container-fluid {
          flex-wrap: nowrap;
        }

        .navbar-collapse {
          display: flex !important;  // stylelint-disable-line declaration-no-important

          // Changes flex-bases to auto because of an IE10 bug
          flex-basis: auto;
        }

        .navbar-toggler {
          display: none;
        }
      }
    }
  }
}


// Navbar themes
//
// Styles for switching between navbars with light or dark background.

// Dark links against a light background
// .navbar-light {
//   .navbar-brand {
//     color: $navbar-light-color;

//     @include hover-focus {
//       color: $navbar-light-hover-color;
//     }
//   }

//   .navbar-nav {
//     .nav-link {
//       color: $navbar-light-color;

//       @include hover-focus {
//         color: $navbar-light-hover-color;
//       }

//       &.disabled {
//         color: $navbar-light-disabled-color;
//       }
//     }

//     .show > .nav-link,
//     .active > .nav-link,
//     .nav-link.show,
//     .nav-link.active {
//       color: $navbar-light-active-color;
//     }
//   }

//   .navbar-toggler {
//     color: $navbar-light-color;
//     border-color: $navbar-light-toggler-border-color;
//   }

//   .navbar-toggler-icon {
//     background-image: $navbar-light-toggler-icon-bg;
//   }

//   .navbar-text {
//     color: $navbar-light-color;
//     a {
//       color: $navbar-light-active-color;

//       @include hover-focus {
//         color: $navbar-light-active-color;
//       }
//     }
//   }
// }

// White links against a dark background
// .navbar-dark {
//   .navbar-brand {
//     color: $navbar-dark-color;

//     @include hover-focus {
//       color: $navbar-dark-hover-color;
//     }
//   }

//   .navbar-nav {
//     .nav-link {
//       color: $navbar-dark-color;

//       @include hover-focus {
//         color: $navbar-dark-hover-color;
//       }

//       &.disabled {
//         color: $navbar-dark-disabled-color;
//       }
//     }

//     .show > .nav-link,
//     .active > .nav-link,
//     .nav-link.show,
//     .nav-link.active {
//       color: $navbar-dark-active-color;
//     }
//   }

//   .navbar-toggler {
//     color: $navbar-dark-color;
//     border-color: $navbar-dark-toggler-border-color;
//   }

//   .navbar-toggler-icon {
//     background-image: $navbar-dark-toggler-icon-bg;
//   }

//   .navbar-text {
//     color: $navbar-dark-color;
//     a {
//       color: $navbar-dark-active-color;

//       @include hover-focus {
//         color: $navbar-dark-active-color;
//       }
//     }
//   }
// }


.vf-navbar {
  width: 100%;
}

.vf-navbar__logo {
  display: block;
  margin: 2rem auto 0.5rem;
  text-align: center;
}

.vf-navbar__subnav {
  background: $vattenfall-blue-grey;
}

.vf-navbar__nav {
  @include make-container();
  @include make-container-max-widths();
  line-height: 1;
  padding: 0;

  display: block;
  
  @include media-breakpoint-up(sm) {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
}

.vf-navbar__nav--subnav {
  justify-content: center;
}

.vf-navbar__nav-item {
  color: #222222;
  font-weight: 500;
  display: block;
  font-size: 20px;
  text-align: center;
  padding: 0;
  line-height: 64px;
  
  @include media-breakpoint-up(sm) {
    font-size: 1rem;
    line-height: 4rem; // 64px
    display: inline-block;
  }

  @include media-breakpoint-up(lg) {
    font-size: 1.25rem;
  }

  &:hover {
    text-decoration: none;
    color: $vattenfall-mid-blue;

    & .svg-text-color {
      fill: $vattenfall-mid-blue !important;
    }
  }   
}

  .vf-navbar__nav-item--active {
    position: relative;
    &:after {
      content: ' ';
      position: absolute;
      bottom: -10px;
      left: 50%;

      display: block;

      width: 0;
      height: 0;

      border: solid transparent;
      pointer-events: none;
      border-bottom-color: $vattenfall-blue-grey;
      border-width: 20px;
      margin-left: -20px;
    }
  }

.vf-navbar__nav--subnav .vf-navbar__nav-item {
  font-size: 1rem;
  font-weight: 500;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.75;
  letter-spacing: -0.1px;
  color: #ffffff;
  padding: 0.75rem 1.25rem;

  &:hover {
    color: $vattenfall-mid-blue;
  }
}


.vf-navbar--on-hero {
  position: absolute;
  z-index: 1;

  & .vf-navbar__nav-item  {
    transition-property: color;
    transition-duration: 200ms;
    color: white;
  }

  & .svg-text-color {
    transition-property: fill;
    transition-duration: 200ms;
    fill: #ffffff !important;
  }
}

.vf-navbar--on-hero-active {
  & .vf-navbar__nav-item  {
    color: #222222;

    &:hover {
      color: $vattenfall-mid-blue;
    }
  }

  & .svg-text-color {
    fill: #4e4b48 !important;
  }
}